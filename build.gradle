plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'application'
}

group = 'goorm.humandelivery'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework:spring-websocket'
    implementation 'org.springframework:spring-messaging'
    implementation 'io.netty:netty-all'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

// 메인 클래스 설정
application {
    mainClass = 'goorm.humandelivery.Main'
}

// Spring Boot 실행 가능한 JAR 구성
bootJar {
    enabled = true
    mainClass.set('goorm.humandelivery.Main')
    archiveClassifier.set('boot')
}

// 일반 JAR 구성 (필요한 경우)
jar {
    enabled = true
    manifest {
        attributes(
                'Main-Class': 'goorm.humandelivery.Main'
        )
    }
}

// 모든 의존성을 포함한 fat JAR 생성을 위한 별도 태스크
tasks.register('fatJar', Jar) {
    archiveClassifier.set('fat')
    from sourceSets.main.output
    manifest {
        attributes(
                'Main-Class': 'goorm.humandelivery.Main'
        )
    }

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// 테스트 구성
test {
    useJUnitPlatform()
}